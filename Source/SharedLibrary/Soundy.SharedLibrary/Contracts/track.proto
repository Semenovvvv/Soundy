syntax = "proto3";

package service.track;

import "google/protobuf/timestamp.proto";
import "Types/type_track.proto";

service TrackGrpcService {
    // Metadata
    rpc Create(CreateRequest) returns (CreateResponse);
    rpc GetById(GetByIdRequest) returns (GetByIdResponse);
    rpc Update(UpdateRequest) returns (UpdateResponse);
    rpc Delete(DeleteRequest) returns (DeleteResponse);
    rpc GetListByUserId(GetListByUserIdRequest) returns (GetListByUserIdResponse);
    
    rpc Search(SearchRequest) returns (SearchResponse);
    //rpc GetListByPlaylist(GetListByPlaylistRequest) returns (GetListByPlaylistResponse);
    
    // Likes
    rpc LikeTrack(LikeTrackRequest) returns (LikeTrackResponse);
    rpc UnlikeTrack(UnlikeTrackRequest) returns (UnlikeTrackResponse);
    rpc GetLikedTracks(GetLikedTracksRequest) returns (GetLikedTracksResponse);
}

message CreateRequest {
    string title = 1;
    string author_id = 2;
    string album_id = 3;
    int32 duration = 4;
    string avatar_url = 5;
}
message CreateResponse{
    types.Track track = 1;
}

message GetByIdRequest {
    string id = 1;
    string user_id = 2; // Опциональный ID пользователя для проверки лайка
}
message GetByIdResponse{
    types.Track track = 1;
}

message UpdateRequest {
    string id = 1;
    string title = 2;
}
message UpdateResponse{
    types.Track track = 1;
}

message DeleteRequest {
    string id = 1;
}
message DeleteResponse {
    bool success = 1;
}

message SearchRequest {
    string pattern = 1;
    int32 page_size = 2;
    int32 page_num = 3;
    string user_id = 4; // Опциональный ID пользователя для проверки лайков
}
message SearchResponse{
    string pattern = 1;
    int32 page_size = 2;
    int32 page_num = 3;
    int32 page_count = 4;
    int32 total_count = 5;
    repeated types.Track tracks = 6;
}

//message GetListByPlaylistRequest{
 //   string playlist_id = 1;
//}
//message GetListByPlaylistResponse{
 //   string playlist_id = 1;
 //   PlaylistData playlist = 2;
  //  repeated TypeTrack tracks = 3;
//}

message GetListByUserIdRequest{
    string user_id = 1;
}

message GetListByUserIdResponse{
    repeated types.Track tracks = 1;
}

// Новые сообщения для лайков
message LikeTrackRequest {
    string track_id = 1;
    string user_id = 2;
}

message LikeTrackResponse {
    bool success = 1;
    types.Track track = 2;
}

message UnlikeTrackRequest {
    string track_id = 1;
    string user_id = 2;
}

message UnlikeTrackResponse {
    bool success = 1;
    types.Track track = 2;
}

message GetLikedTracksRequest {
    string user_id = 1;
}

message GetLikedTracksResponse {
    repeated types.Track tracks = 1;
}
