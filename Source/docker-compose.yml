networks:
  app-network:
    driver: bridge

services:
  api_gateway:
    image: ${DOCKER_REGISTRY-}webhost
    build:
      context: .
      dockerfile: ApiGateway/Soundy.ApiGateWay/Dockerfile
    environment:
      USER_SERVICE_URI: ${USER_SERVICE_URI}
      CATALOG_SERVICE_URI: ${CATALOG_SERVICE_URI}
      FILE_SERVICE_URI: ${FILE_SERVICE_URI}
      DOTNET_ENVIRONMENT: "Development"
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    networks:
      - app-network

  user_service:
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: .
      dockerfile: Services/UserService/Soundy.UserService/Dockerfile
      # context: ${USER_SERVICE_PATH}
      # dockerfile: Dockerfile
    environment:
      - CATALOG_SERVICE_URI=${CATALOG_SERVICE_URI}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      - USER_SERVICE_POSTGRES_HOST=${USER_SERVICE_POSTGRES_HOST}
      - USER_SERVICE_POSTGRES_DB=${USER_SERVICE_POSTGRES_DB}
      - USER_SERVICE_POSTGRES_PORT=${USER_SERVICE_POSTGRES_PORT} 
      - USER_SERVICE_POSTGRES_USER=${USER_SERVICE_POSTGRES_USER} 
      - USER_SERVICE_POSTGRES_PASSWORD=${USER_SERVICE_POSTGRES_PASSWORD} 
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    depends_on:
      - user_db_pgsql
    networks:
      - app-network

  user_db_pgsql: 
    image: postgres:latest
    expose:
      - "5433"
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DB=${USER_SERVICE_POSTGRES_DB}
      - POSTGRES_USER=${USER_SERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${USER_SERVICE_POSTGRES_PASSWORD}
    volumes:
      - user_db_pgsql_data:/var/lib/postgresql/data
    restart: always
    command: -p 5433
    networks:
      - app-network

  catalog_service:
    image: ${DOCKER_REGISTRY-}catalogservice
    build:
      context: .
      dockerfile: Services/CatalogService/Soundy.CatalogService/Dockerfile
      # context: ${CATALOG_SERVICE_PATH}
      # dockerfile: ./Dockerfile
    environment:
      - USER_SERVICE_URI=${USER_SERVICE_URI}
      - CATALOG_SERVICE_PORT=${CATALOG_SERVICE_PORT}
      - CATALOG_SERVICE_POSTGRES_HOST=${CATALOG_SERVICE_POSTGRES_HOST}
      - CATALOG_SERVICE_POSTGRES_DB=${CATALOG_SERVICE_POSTGRES_DB}
      - CATALOG_SERVICE_POSTGRES_PORT=${CATALOG_SERVICE_POSTGRES_PORT} 
      - CATALOG_SERVICE_POSTGRES_USER=${CATALOG_SERVICE_POSTGRES_USER} 
      - CATALOG_SERVICE_POSTGRES_PASSWORD=${CATALOG_SERVICE_POSTGRES_PASSWORD} 
    ports:
      - "${CATALOG_SERVICE_PORT}:${CATALOG_SERVICE_PORT}"
    depends_on:
      - catalog_db_pgsql
    networks:
      - app-network

  catalog_db_pgsql: 
    image: postgres:latest
    expose:
      - "5435"
    ports:
      - "5435:5435"
    environment:
      - POSTGRES_DB=${CATALOG_SERVICE_POSTGRES_DB}
      - POSTGRES_USER=${CATALOG_SERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${CATALOG_SERVICE_POSTGRES_PASSWORD}
    volumes:
      - catalog_db_pgsql_data:/var/lib/postgresql/data
    restart: always
    command: -p 5435
    networks:
      - app-network

  iam_service:
    image: ${DOCKER_REGISTRY-}iamservice
    build:
      context: .
      dockerfile: Services/IAM/Soundy.IAM/Dockerfile
    environment:
      - USER_SERVICE_URI=${USER_SERVICE_URI}
      - IAM_SERVICE_PORT=${IAM_SERVICE_PORT}
      - IAM_SERVICE_POSTGRES_HOST=${IAM_SERVICE_POSTGRES_HOST}
      - IAM_SERVICE_POSTGRES_DB=${IAM_SERVICE_POSTGRES_DB}
      - IAM_SERVICE_POSTGRES_PORT=${IAM_SERVICE_POSTGRES_PORT} 
      - IAM_SERVICE_POSTGRES_USER=${IAM_SERVICE_POSTGRES_USER} 
      - IAM_SERVICE_POSTGRES_PASSWORD=${IAM_SERVICE_POSTGRES_PASSWORD} 
    ports:
      - "${IAM_SERVICE_PORT}:${IAM_SERVICE_PORT}"
    depends_on:
      - iam_db_pgsql
    networks:
      - app-network

  iam_db_pgsql: 
    image: postgres:latest
    expose:
      - "${IAM_SERVICE_POSTGRES_PORT}"
    ports:
      - "${IAM_SERVICE_POSTGRES_PORT}:${IAM_SERVICE_POSTGRES_PORT}"
    environment:
      - POSTGRES_DB=${CATALOG_SERVICE_POSTGRES_DB}
      - POSTGRES_USER=${CATALOG_SERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${CATALOG_SERVICE_POSTGRES_PASSWORD}
      - IAM_SERVICE_POSTGRES_PORT=${IAM_SERVICE_POSTGRES_PORT}
    volumes:
      - iam_db_pgsql_data:/var/lib/postgresql/data
    restart: always
    command: -p ${IAM_SERVICE_POSTGRES_PORT}
    networks:
      - app-network

  file_service:
    image: ${DOCKER_REGISTRY-}fileservice
    build:
      context: .
      dockerfile: Services/FileService/Soundy.FileService/Dockerfile
      # context: ${CATALOG_SERVICE_PATH}
      # dockerfile: ./Dockerfile
    environment:
      - FILE_SERVICE_PORT=${FILE_SERVICE_PORT}
    ports:
      - "${FILE_SERVICE_PORT}:${FILE_SERVICE_PORT}"
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_LOGIN}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data
    networks:
      - app-network

volumes:
  user_db_pgsql_data:
  catalog_db_pgsql_data:
  minio_data:
  iam_db_pgsql:
