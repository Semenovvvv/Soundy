# encoding: utf-8    

networks:
  app-network:
    driver: bridge

services:
  user_service:
    build:
      context: .
      dockerfile: Services/UserService/Soundy.UserService/Dockerfile
      # context: ${USER_SERVICE_PATH}
      # dockerfile: Dockerfile
    environment:
      - USER_SERVICE_KESTREL_PORT=${USER_SERVICE_KESTREL_PORT}
      - USER_SERVICE_POSTGRES_HOST=${USER_SERVICE_POSTGRES_HOST}
      - USER_SERVICE_POSTGRES_DB=${USER_SERVICE_POSTGRES_DB}
      - USER_SERVICE_POSTGRES_PORT=${USER_SERVICE_POSTGRES_PORT} 
      - USER_SERVICE_POSTGRES_USER=${USER_SERVICE_POSTGRES_USER} 
      - USER_SERVICE_POSTGRES_PASSWORD=${USER_SERVICE_POSTGRES_PASSWORD} 
    ports:
      - "5005:5005"
    container_name: user_service
    depends_on:
      - user_db_pgsql
    networks:
      - app-network

  user_db_pgsql: 
    image: postgres:latest
    expose:
      - "5433"
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DB=${USER_SERVICE_POSTGRES_DB}
      - POSTGRES_USER=${USER_SERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${USER_SERVICE_POSTGRES_PASSWORD}
    volumes:
      - user_db_pgsql_data:/var/lib/postgresql/data
    restart: always
    container_name: user_db_pgsql
    command: -p 5433
    networks:
      - app-network

  catalog_service:
    build:
      context: .
      dockerfile: Services/CatalogService/Soundy.CatalogService/Dockerfile
      # context: ${CATALOG_SERVICE_PATH}
      # dockerfile: ./Dockerfile
    environment:
      - CATALOG_SERVICE_KESTREL_PORT=${CATALOG_SERVICE_KESTREL_PORT}
      - CATALOG_SERVICE_POSTGRES_HOST=${CATALOG_SERVICE_POSTGRES_HOST}
      - CATALOG_SERVICE_POSTGRES_DB=${CATALOG_SERVICE_POSTGRES_DB}
      - CATALOG_SERVICE_POSTGRES_PORT=${CATALOG_SERVICE_POSTGRES_PORT} 
      - CATALOG_SERVICE_POSTGRES_USER=${CATALOG_SERVICE_POSTGRES_USER} 
      - CATALOG_SERVICE_POSTGRES_PASSWORD=${CATALOG_SERVICE_POSTGRES_PASSWORD} 
    ports:
      - "5006:5006"
    container_name: catalog_service
    depends_on:
      - catalog_db_pgsql
    networks:
      - app-network

  catalog_db_pgsql: 
    image: postgres:latest
    expose:
      - "5435"
    ports:
      - "5435:5435"
    environment:
      - POSTGRES_DB=${CATALOG_SERVICE_POSTGRES_DB}
      - POSTGRES_USER=${CATALOG_SERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${CATALOG_SERVICE_POSTGRES_PASSWORD}
    volumes:
      - catalog_db_pgsql_data:/var/lib/postgresql/data
    restart: always
    container_name: catalog_db_pgsql
    command: -p 5435
    networks:
      - app-network

  file_service:
    build:
      context: .
      dockerfile: Services/FileService/Soundy.FileService/Dockerfile
      # context: ${CATALOG_SERVICE_PATH}
      # dockerfile: ./Dockerfile
    environment:
      - FILE_SERVICE_KESTREL_PORT=${FILE_SERVICE_KESTREL_PORT}
    ports:
      - "5007:5007"
    container_name: file_service
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data
    networks:
      - app-network

volumes:
  user_db_pgsql_data:
  catalog_db_pgsql_data:
  minio_data:
